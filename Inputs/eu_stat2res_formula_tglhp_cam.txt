#Unit	GSIM residency			Comments
#Instance Counts				
	CrClocks	=	D(MAX_CYCLES)	
	FPS	=        1      # Dummy value as FPS is irrelevant in analytical model 	
	numEUs	=	 1 	#This includes Slices & SubSlices
	numFGs = numEUs    # Dummy value since this stat2res caters only to one EU
	num_EU_FPU0	=	numEUs	
	num_EU_FPU1	=	numEUs	
	num_EU_EM	=	numEUs	
	num_EU_GA	=	numEUs
	num_EU_TC	=	numFGs	
	num_EU_GRF	=	numEUs	
	num_EU_DFX	=	numEUs	
	num_EU_SMALL	=	numEUs	
	num_EU_CPunit	=	numEUs	
	num_EU_Assign	=	numEUs	
	num_EU_Repeater	=	numEUs	
	num_EU_CLKGLUE	=	numEUs	
	num_EU_NONCLKGLUE	=	numEUs	
	num_EU_DOP	=	numEUs	
	num_EU_TCGA	=	numEUs	
	num_EU_Pipelines	=	numEUs	
	num_EU_Accumulator	=	numEUs			
	num_EU_ExtraPipe = numEUs
# Generic definitions
        @FPU@ = FPU
        @ALLINST@ = (mad|mul|mov|mac|sel|add)
        @ALLDTYPE@ = (16|32|64)
	FPU_total_count = D(SUM(@FPU@_@ALLINST@_fp@ALLDTYPE))
        INT_total_count = D(SUM(@FPU@_@ALLINST@_int@ALLDTYPE))		
#FPU and DPAS opcodes
        FPU0_toggle_rate = 0.3
        FPU1_toggle_rate = 0.3
        GA_toggle_rate = MAX(FPU0_toggle_rate, FPU1_toggle_rate) 
        FPU0_mad_fp32 = (FPU_total_count > 0) ? (D(SUM(@FPU@_@mad_fp32))) / (FPU_total_count)) : 0
        FPU0_mul_fp32 = (FPU_total_count > 0) ? (D(SUM(@FPU@_@mul_fp32))) / (FPU_total_count)) : 0
        FPU0_add_fp32 = (FPU_total_count > 0) ? (D(SUM(@FPU@_@add_fp32))) / (FPU_total_count)) : 0 
        FPU0_sel_fp32 = (FPU_total_count > 0) ? (D(SUM(@FPU@_@sel_fp32))) / (FPU_total_count)) : 0 
        FPU0_mac_fp32 = (FPU_total_count > 0) ? (D(SUM(@FPU@_@mac_fp32))) / (FPU_total_count)) : 0 
        FPU0_mad_fp16 = (FPU_total_count > 0) ? (D(SUM(@FPU@_@mad_fp16))) / (FPU_total_count)) : 0 
        FPU0_mul_fp16 = (FPU_total_count > 0) ? (D(SUM(@FPU@_@mul_fp16))) / (FPU_total_count)) : 0 
        FPU0_add_fp16 = (FPU_total_count > 0) ? (D(SUM(@FPU@_@add_fp16))) / (FPU_total_count)) : 0 
        FPU0_sel_fp16 = (FPU_total_count > 0) ? (D(SUM(@FPU@_@sel_fp16))) / (FPU_total_count)) : 0 
        FPU0_mac_fp16 = (FPU_total_count > 0) ? (D(SUM(@FPU@_@mac_fp16))) / (FPU_total_count)) : 0 
        FPU1_mad_int32 = (INT_total_count > 0) ? (D(SUM(@FPU@_@mad_int32))) / (INT_total_count)) : 0 
        FPU1_mac_int32 = (INT_total_count > 0) ? (D(SUM(@FPU@_@mac_int32))) / (INT_total_count)) : 0 
        FPU1_mul_int32 = (INT_total_count > 0) ? (D(SUM(@FPU@_@mul_int32))) / (INT_total_count)) : 0 
        FPU1_add_int32 = (INT_total_count > 0) ? (D(SUM(@FPU@_@add_int32))) / (INT_total_count)) : 0 
        FPU1_sel_int32 = (INT_total_count > 0) ? (D(SUM(@FPU@_@sel_int32))) / (INT_total_count)) : 0 
        FPU1_mad_int16 = (INT_total_count > 0) ? (D(SUM(@FPU@_@mad_int16))) / (INT_total_count)) : 0 
        FPU1_mul_int16 = (INT_total_count > 0) ? (D(SUM(@FPU@_@mul_int16))) / (INT_total_count)) : 0 
        FPU1_add_int16 = (INT_total_count > 0) ? (D(SUM(@FPU@_@add_int16))) / (INT_total_count)) : 0 
        FPU1_sel_int16 = (INT_total_count > 0) ? (D(SUM(@FPU@_@sel_int16))) / (INT_total_count)) : 0 
        FPU1_mac_int16 = (INT_total_count > 0) ? (D(SUM(@FPU@_@mac_int16))) / (INT_total_count)) : 0 
        PS2_GRF_SEND_PATH = D(send)/CrClocks
        PS2_EU_FPU0   = D(FPU_UTILIZATION)
        PS2_EU_FPU1   = INT_total_count/CrClocks
        EM_transc_fp32 = D(EM_math)/CrClocks
        ExtraPipe_DPAS_Float = D(SYS_FLOAT)/CrClocks
        ExtraPipe_DPAS_Int = D(SYS_INT)/CrClocks
#GRF and GA related
        PS2_GA_FPU3Src_SinglePipe = D(GA_UTILIZATION)
        PS2_GRF_READ = D(GRF_READ)/CrClocks
        PS2_GRF_WRITE = D(GRF_WRITE)/CrClocks
        
        
