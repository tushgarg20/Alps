#Unit	GSIM residency			Comments
#Instance Counts				
	num_L3_Slices			=	knob.global.NumSlices	+ SUM('knob\.STK\d+\.NumSlices')
	#num_L3Node_LNI			=	2 * num_L3_Slices
	num_L3Node_LNI			=	COUNT('knob\.S\d\.uL3\.LNI_\d\.MemFillBuf\.PopEvent')	
	num_L3Node_LNE			=	COUNT('knob\.S\d\.uL3\.LNE_\d\.CReturnQ.PopEvent')	
	num_L3Node_LNIXS		=	0	
	num_L3Node_LNEXS		=	0	
	num_L3Node_L3BankOther	=	num_L3_Slices	#GLUE/Small
	num_L3Node_DOP			=	num_L3_Slices	
	num_L3Node_DFX			=	num_L3_Slices	
	num_L3Node_SMALL		=	num_L3_Slices	
	num_L3Node_CPunit		=	num_L3_Slices	
	num_L3Node_Assign		=	num_L3_Slices	
	num_L3Node_Repeater		=	num_L3_Slices	
	num_L3Node_CLKGLUE		=	num_L3_Slices	
	num_L3Node_NONCLKGLUE	=	num_L3_Slices	
#Generic				
	 #@ANY_L3BANK@			=	S\d+\.uL3\.Bank_\d+\.	
	 @ANY_L3BANK@			=	(STK\d+\.S\d+\.uL3\.Bank_\d+\.|S\d+\.uL3\.Bank_\d+\.)
	 @ANY_LNI@				=	(STK\d+\.S\d+\.uL3\.LNI_\d+\.Bank_\d+_|S\d+\.uL3\.LNI_\d+\.bank_\d+\_)
	 .CrClk					=	D(CrClock.Clocks)	
	 .CrClk2x				=	D(SUM('2xCrClock\.Clocks'))	
	LNI_max_ports			=	numL3Banks * 2	#Max ports availabe for LNI
	.temp_LNE_max1			=	D(MIN(6, (num_L3_SubSlices + 3)))	
	.temp_LNE_max2			=	D(MIN(4, (num_L3_SubSlices + 3)))	
	LNE_max_ports			=	(num_L3_Slices > 1) ? .temp_LNE_max1 : .temp_LNE_max2	#Max ports available for LNE
	L3SuperQSize			=	knob.S0.uL3.SuperQSize	
 	@ANY_L3@				=	(STK\d+\.S\d+\.uL3\.|S\d+\.uL3\.)
	@anyLSNEP@ 		=	(uLSNEND_\d+\.)
#LNI	
	num_L3_Banks = num_L3_Slices * 4
	num_L3_Buses = (D(SUM('knob.S0.uL3.NumUpFabricBus'))+D(SUM('knob.S0.uL3.NumDownFabricBus'))+D(SUM('knob.STK0.S0.uL3.NumUpFabricBus'))+D(SUM('knob.STK0.S0.uL3.NumDownFabricBus')))/2
	
	PS0_LNI						=	D(SUM('@ANY_L3@LNI_\d\.Idle'))/(num_L3Node_LNI*.CrClk)
	PS1_LNI						=	D(SUM('@ANY_L3@LNI_\d\.Stalled'))/(num_L3Node_LNI*.CrClk)
	PS2_LNI_LOCAL_1BANK_1READ	=	D(SUM('@ANY_LNI@LocalSliceRead'))/(num_L3Node_LNI*.CrClk)
	PS2_LNI_LOCAL_1BANK_1WRITE	=	D(SUM('@ANY_LNI@LocalSliceWrite'))/(num_L3Node_LNI*.CrClk)
	PS2_LNI_XSLICE_ING_1WRITE	=	D(SUM('@ANY_LNI@XSliceSliceWrite'))/(num_L3Node_LNI*.CrClk)
	PS2_LNI_XSLICE_ING_1READ	=	D(SUM('@ANY_LNI@XSliceSliceRead'))/(num_L3Node_LNI*.CrClk)
	PS2_LNI_XSLICE_ING_MEMFILL	=	D(SUM('@ANY_LNI@MemReturn'))/(num_L3Node_LNI*.CrClk)
	PS2_LNI_XSLICE_EGR_1READ	=	(D(SUM('@ANY_LNI@XSliceSliceRead')) - D(SUM('@anyLSNEP@GafsReadInBuf_\d+\.popped')))/(num_L3Node_LNI*.CrClk)
	PS2_LNI_XSLICE_EGR_1WRITE	=	(D(SUM('@ANY_LNI@XSliceSliceWrite')) - D(SUM('@anyLSNEP@GafsWriteInBuf_\d+\.popped')))/(num_L3Node_LNI*.CrClk)
	.residuallni				=	1- (PS0_LNI + PS1_LNI + PS2_LNI_LOCAL_1BANK_1READ + PS2_LNI_LOCAL_1BANK_1WRITE + PS2_LNI_XSLICE_ING_1WRITE + PS2_LNI_XSLICE_ING_1READ + PS2_LNI_XSLICE_ING_MEMFILL )
	PS2_LNI_Else				=	(.residuallni<0)?0:.residuallni
#LNE				#Divide by 2 - 2 ports /bank and 2 banks/LNIe
	
	PS0_LNE						=	D(SUM('@ANY_L3@LNE_\d\.Idle'))/(num_L3Node_LNE*.CrClk)
	PS1_LNE						=	D(SUM('@ANY_L3@LNE\d\.Stalled'))/(num_L3Node_LNE*.CrClk)
	PS2_LNE_SS_DATARTN			=	D(SUM('@ANY_L3BANK@BankOutLSBuf\.pushed'))/(num_L3Node_LNE*.CrClk)
	PS2_LNE_LSN_EGR_DATARTN		=	D(SUM('@ANY_L3BANK@BankOutCSBuf\.pushed'))/(num_L3Node_LNE*.CrClk)
	PS2_LNE_LSN_ING_DATARTN		=	(D(SUM('@ANY_L3@LNE_\d\.CrossSliceReturnIngressQ_\d\.pushed')))/(num_L3Node_LNE*.CrClk)
	PS2_LNE_LSN_EGR_READ		=	D(SUM('@ANY_L3BANK@ReqMiss'))/(num_L3Node_LNE*.CrClk)
	PS2_LNE_LSN_EGR_WRITE		=	D(SUM('@ANY_L3BANK@Evict'))/(num_L3Node_LNE*.CrClk)
	#PS2_LNE_colorz_returns=?
	.residuallne				=	1-(PS0_LNE + PS1_LNE + PS2_LNE_SS_DATARTN + PS2_LNE_LSN_EGR_DATARTN + PS2_LNE_LSN_ING_DATARTN + PS2_LNE_LSN_EGR_READ + PS2_LNE_LSN_EGR_WRITE)
	PS2_LNE_Else				=	(.residuallne<0)?0:.residuallne
		
#L3NODEDOP				
	PS0_L3Node_DOP	=	0	
	PS1_L3Node_DOP	=	0	
	PS2_L3Node_DOP	=	1	#No DOP gating in L3
				
#L3NODEDFX				
	PS0_L3Node_DFX	=	D(SUM('S\d+.uL3\.IdleCount.2xCrClock')) / (.CrClk2x * num_L3_Slices)	
	PS2_L3Node_DFX	=	1-PS0_L3Node_DFX	
				
#L3NODESMALL				

	PS0_L3Node_SMALL	=	AVG(PS0_LNE,PS0_LNI)
	PS1_L3Node_SMALL	=	AVG(PS1_LNE,PS1_LNI)
	PS2_L3Node_SMALL	=	1-(PS1_L3Node_SMALL+PS0_L3Node_SMALL)
						
#L3NODECPunit				
	PS0_L3Node_CPunit	=	D(SUM('S\d+.uL3\.IdleCount.2xCrClock')) / (.CrClk2x * num_L3_Slices)	
	PS2_L3Node_CPunit	=	1-PS0_L3Node_SMALL	
				
#L3NODEAssign				
	PS0_L3Node_Assign	=	D(SUM('S\d+.uL3\.IdleCount.2xCrClock')) / (.CrClk2x * num_L3_Slices)	
	PS2_L3Node_Assign	=	1-PS0_L3Node_SMALL	
				
#L3NODERepeater				
        PS0_L3Node_Repeater	=	AVG(PS0_LNE,PS0_LNI)
	PS1_L3Node_Repeater	=	AVG(PS1_LNE,PS1_LNI)
	PS2_L3Node_Repeater	=	1-(PS1_L3Node_Repeater+PS0_L3Node_Repeater)
			
			
#L3NODECLKGLUE				
	PS0_L3Node_CLKGLUE	=	D(SUM('S\d+.uL3\.IdleCount.2xCrClock')) / (.CrClk2x * num_L3_Slices)	
	PS2_L3Node_CLKGLUE	=	1-PS0_L3Node_CLKGLUE	
				
#L3NONCLKGLUE				


	PS0_L3Node_NONCLKGLUE	=	AVG(PS0_LNE,PS0_LNI)
	PS1_L3Node_NONCLKGLUE	=	AVG(PS1_LNE,PS1_LNI)
	PS2_L3Node_NONCLKGLUE	=	1-(PS1_L3Node_NONCLKGLUE+PS0_L3Node_NONCLKGLUE)
			

