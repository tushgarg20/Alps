#Unit	GSIM residency			
#Instance Counts				
	num_RC_L3XSRC	=	(numSlices > 1) ? ((2 * numSlices) - 3) : 0	#N2NRC or L3XSRC GC scales approximately in this fashion
	num_RC_RC	=	numSlices	#RC scales with number of slices (starting from GT3)
	num_RC_SliceRC	=	(numSlices - 1) #CmUnqRC or SliceRC GC scales approximately in this fashion	
	num_RC_LNIECS	=	(numSlices > 1) ? numSlices : 0       #LNIECS scales with number of slices and an additional cost for slices >= 3	
	num_RC_GT3BFRC	=	(numSlices > 1) ? 1 : 0	#BGF doesnot scale linearly with slices
	num_RC_Fabric	=	(numSlices - 1)	
				
#Generic				
	.CrClk	=	D(CrClock.Clocks)	
	 .GeoClk2x	=	D(SUM('2xGeoClock\.Clocks'))	
	numSlices	=	knob.global.NumSlices	
	.isSKLGT3	=	(numSlices > 1) ? 1 : 0	
	.isCNLGT2	=	(numSlices == 1) ? 1 : 0	
	.isCNLGT2P5	=	(numSlices == 2) ? 1 : 0	
	.isCNLGT3	=	(numSlices == 3) ? 1 : 0	
	.isCNLGT4	=	(numSlices == 4) ? 1 : 0	
	.isCNLHalo	=	(numSlices == 6) ? 1 : 0	
	num_vtxpipes	=	1	#Possible future change
#Routing Channel				
#SliceRC				
	PS0_SliceRC	=	(.isSKLGT3 > 0) ? (1 - PS2_SliceRC) : 0	
	.MSC_misses	=	D(SUM('S\d+\.uMSC_\d+\.NumReadsFromMem')) /( .CrClk * numSlices	)
	.MSC_writes	=	D(SUM('S\d+\.uMSC_\d+\.NumWritetoMem')) / (.CrClk * numSlices)	
	.RCC_misses	=	D(SUM('S\d+\.uColorCache_\d+\.NumReadsFromMem')) / (.CrClk * numSlices)	
	.RCC_writes	=	D(SUM('S\d+\.uColorCache_\d+\.NumWriteBacksToMem')) / (.CrClk * numSlices)	
	.RCZ_misses	=	D(SUM('S\d+\.uZCache\.NumReadsFromMem')) /( .CrClk * numSlices)	
	.RCZ_writes	=	D(SUM('S\d+\.uZCache\.NumWriteBacksToMem')) / (.CrClk * numSlices)	
	.HiZ_misses	=	D(SUM('S\d+\.uHzCache\.NumReadsFromMem')) /( .CrClk * numSlices)	
	.HiZ_writes	=	D(SUM('S\d+\.uHzCache\.NumWriteBacksToMem')) / (.CrClk * numSlices)	
	PS2_SliceRC	=	(.isSKLGT3 > 0) ? (.MSC_misses + .MSC_writes + .RCC_misses + .RCC_writes + .RCZ_misses + .RCZ_writes + .HiZ_misses + .HiZ_writes) : 0	
#RC
	PS0_RC	= (.isSKLGT3 > 0) ? (1 - PS2_SliceRC) : 1		
	PS2_RC	= PS2_SliceRC		
#L3XS				
	PS0_L3XSRC	=	(.isSKLGT3 > 0) ? (1 - PS2_L3XSRC) : 0	
	.LNIXS_Read_Writes	=	((D(SUM('S\d+.uL3\.LniXSWinners\.1'))) + (D(SUM('S\d+.uL3\.LniXSWinners\.2'))) + (D(SUM('S\d+.uL3\.LniXSWinners\.3'))) + (D(SUM('S\d+.uL3\.LniXSWinners\.4'))) + (D(SUM('S\d+.uL3\.LniXSWinners\.5'))) + (D(SUM('S\d+.uL3\.LniXSWinners\.6'))) + (D(SUM('S\d+.uL3\.LniXSWinners\.7'))) + (D(SUM('S\d+.uL3\.LniXSWinners\.8')))) / (.CrClk * numSlices)	
	.LNEXS_Read_Writes	=	((D(SUM('S\d+.uL3\.LneXSWinners\.1'))) + (D(SUM('S\d+.uL3\.LneXSWinners\.2'))) + (D(SUM('S\d+.uL3\.LneXSWinners\.3'))) + (D(SUM('S\d+.uL3\.LneXSWinners\.4'))) + (D(SUM('S\d+.uL3\.LneXSWinners\.5'))) + (D(SUM('S\d+.uL3\.LneXSWinners\.6'))) + (D(SUM('S\d+.uL3\.LneXSWinners\.7'))) + (D(SUM('S\d+.uL3\.LneXSWinners\.8')))) / (.CrClk * numSlices)	
	PS2_L3XSRC	=	(.isSKLGT3 > 0) ? (.LNIXS_Read_Writes + .LNEXS_Read_Writes) : 0	
#LNIECS
	PS0_LNIECS_Base		=	(.isSKLGT3 > 0) ? (1 - PS2_L3XSRC) : 0	
	PS0_LNIECS_Slice	=	(numSlices > 2) ? (1 - PS2_L3XSRC) * (numSlices - 2) : 0	
	PS2_LNIECS_Base		=	PS2_L3XSRC	
	PS2_LNIECS_Slice	=	(numSlices > 2) ? PS2_L3XSRC * (numSlices - 2) : 0	
#GT3BF				
	PS0_GT3BFRC		=	(.isSKLGT3 > 0) ? (1 - .temp_PS2_GT3BFRC) : 0	
	PS0_GT3BFRC_Base	=	(.isSKLGT3 > 0) ? (1 - .temp_PS2_GT3BFRC) : 0	
	PS0_GT3BFRC_Slice	=	(numSlices > 2) ? (1 - .temp_PS2_GT3BFRC) * (numSlices - 2) : 0	
	.CL_L3_Reads		=	D(Geo.uCL.CL_URBRdRequestFifo.pushed) / .GeoClk2x	
	.TE_L3_Reads		=	D(Geo.uTE.TE_URBReadRequestFifo.pushed) / .GeoClk2x	
	.GS_L3_Reads		=	D(Geo.uGS.UrbInBuffer.pushed) / .GeoClk2x	
	.SOL_L3_Reads		=	D(Geo.uCL.CL_URBRdRequestFifo.pushed) / .GeoClk2x	#No GSIM model - approx with Clipper
	.VF_L3_Writes		=	D(SUM('Geo\.uVF\.VtxPipe_\d+\.UrbWrites')) / (num_vtxpipes * .GeoClk2x)	
	.temp_PS2_GT3BFRC	=	(.isSKLGT3 > 0) ? (.CL_L3_Reads + .TE_L3_Reads + .GS_L3_Reads + .SOL_L3_Reads + .VF_L3_Writes) : 0	
	PS2_GT3BFRC_Base	=	.temp_PS2_GT3BFRC
	PS2_GT3BFRC_Slice	=	(numSlices > 2) ? .temp_PS2_GT3BFRC * (numSlices - 2) : 0
				
#Fabric				
	PS0_Fabric	=	1 - (PS2_Fabric_GT2 + PS2_Fabric_GT2P5 + PS2_Fabric_GT3 + PS2_Fabric_GT4 + PS2_Fabric_Halo)	#Use all PS2_*. Only the corresponding GT* will be ON at any given point
	.temp_gt3bf_fabric	=	.CL_L3_Reads + .TE_L3_Reads + .GS_L3_Reads + .SOL_L3_Reads + .VF_L3_Writes	#Geoclk2x residency
	.temp_slice_fabric	=	(.MSC_misses + .MSC_writes + .RCC_misses + .RCC_writes + .RCZ_misses + .RCZ_writes + .HiZ_misses + .HiZ_writes)/2	#Crclk residency - baselined to Geoclk2x
	.temp_l3xs_fabric	=	(.LNIXS_Read_Writes + .LNEXS_Read_Writes)/2	#Crclk residency - baselined to Geoclk2x
	PS2_Fabric_GT2	=	(.isCNLGT2 > 0) ?(.temp_fabric_Active/.CrClk):0
	PS2_Fabric_GT2P5	=	(.isCNLGT2P5 > 0) ?(.temp_fabric_Active/.CrClk):0
	PS2_Fabric_GT3	=	(.isCNLGT3 > 0) ?(.temp_fabric_Active/.CrClk):0
	PS2_Fabric_GT4	=	(.isCNLGT4 > 0) ?(.temp_fabric_Active/.CrClk):0
	PS2_Fabric_Halo	=	(.isCNLHalo > 0) ?(.temp_fabric_Active/.CrClk):0
	.temp_fabric_READ	=	SUM('S\d+.uL3.LSN.UpBus_\d+_read')+SUM('S\d+.uL3.LSN.DownBus_\d+_read')
	.temp_fabric_WRITE	=	SUM('S\d+.uL3.LSN.UpBus_\d+_write')+SUM('S\d+.uL3.LSN.DownBus_\d+_write')
	.temp_fabric_RETURN	=	SUM('S\d+.uL3.LSN.UpBus_\d+_return')+SUM('S\d+.uL3.LSN.DownBus_\d+_return')
	.temp_fabric_CMD	=	(.temp_fabric_READ+.temp_fabric_WRITE)/10
	.temp_fabric_DATA	=	(.temp_fabric_READ+.temp_fabric_RETURN)/10
	.temp_fabric_Active	=	(.temp_fabric_CMD+.temp_fabric_DATA*5)/(numSlices*6)

	
