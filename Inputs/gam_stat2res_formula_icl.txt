#Unit	GSIM residency		
#Instance Counts			
	numSlices	=	knob.Icl.NumSlices
	numGAM	=	COUNT('knob.uGAM.NumSlices')
	num_GAM_GAMTLB	=	numGAM
	num_GAM_GAMW	=	numGAM
	num_GAM_GACB	=	numGAM
	num_GAM_GAMD	=	numGAM
	num_GAM_GAFM	=	numGAM
	num_GAM_GAFS	=	numGAM
	num_GAM_GAP	=	numGAM
	num_GAM_GAPL3	=	numGAM
	num_GAM_GAPZ	=	numGAM
	num_GAM_GAPC	=	numGAM
	num_GAM_DOP	=	numGAM
	num_GAM_CLKGLUE	=	numGAM
	num_GAM_NONCLKGLUE	=	numGAM
	num_GAM_SMALL	=	numGAM
	num_GAM_CPunit	=	numGAM
	num_GAM_Assign	=	numGAM
	num_GAM_Repeater	=	numGAM
	num_GAM_DFX	=	numGAM
	num_GAM_GAPS	=	numGAM
	num_GAM_GAMD_Cache  	=	numGAM
	num_GAM_GAMTLB_EBB  	=	numGAM
	num_GAM_GAMW_EBB    	=	numGAM
	num_GAM_GATR	=	numGAM
	num_GAM_GATRW	=	numGAM
	 @CLOCKS@	=	D(CrClock.Clocks)
	 @2XCLOCKS@	=	D(SUM('2xCrClock\.Clocks'))
			
			
#GAMTLB			
 'uGAM\.pwr_GAMTLB_Idle\.(\w*Clock)' : 	.temp_PS2_GAMTLB	=	(D({$1}.Clocks) -  D(uGAM.pwr_GAMTLB_Stalled_or_Idle.{$1}))
 'uGAM\.pwr_GAMTLB_Idle\.(\w*Clock)' : 	PS0_GAMTLB	=	D(SUM(uGAM.pwr_GAMTLB_Idle.{$1}))/(D({$1}.Clocks)*numGAM)
 'uGAM\.pwr_GAMTLB_Idle\.(\w*Clock)' : 	PS1_GAMTLB	=	D(((uGAM.pwr_GAMTLB_Stalled_or_Idle.{$1} -  uGAM.pwr_GAMTLB_Idle.{$1})))/(D({$1}.Clocks)*numGAM)
 'uGAM\.pwr_GAMTLB_Idle\.(\w*Clock)' : 	PS2_GAMTLB	=	(D({$1}.Clocks) -  D(uGAM.pwr_GAMTLB_Stalled_or_Idle.{$1}))/D({$1}.Clocks)

 'uGAM\.pwr_GAMTLB_Idle\.(\w*Clock)' : 	PS2_GAMTLB_Hit	=	D(SUM(uGAM.GamL3TLB.TLB.tlb_hits_TLB +  uGAM.GamZTLB.TLB.tlb_hits_TLB +  uGAM.GamFFTLB.TLB.tlb_hits_TLB +  uGAM.GamCTLB.TLB.tlb_hits_TLB +  uGAM.GamGacTLB.TLB.tlb_hits_TLB +  uGAM.GamGavTLB.TLB.tlb_hits_TLB))/(D({$1}.Clocks)*numGAM)
 'uGAM\.pwr_GAMTLB_Idle\.(\w*Clock)' : 	PS2_GAMTLB_Miss	=	D(SUM(uGAM.GamL3TLB.TLB.tlb_MissTrue_TLB + uGAM.GamZTLB.TLB.tlb_MissTrue_TLB +  uGAM.GamFFTLB.TLB.tlb_MissTrue_TLB +  uGAM.GamCTLB.TLB.tlb_MissTrue_TLB +  uGAM.GamGacTLB.TLB.tlb_MissTrue_TLB +  uGAM.GamGavTLB.TLB.tlb_MissTrue_TLB))/(D({$1}.Clocks)*numGAM)
 'uGAM\.pwr_GAMTLB_Idle\.(\w*Clock)' : 	PS2_GAMTLB_HitNotPresent	=	D(SUM(uGAM.GamL3TLB.TLB.tlb_MissNotPresent_TLB +  uGAM.GamZTLB.TLB.tlb_MissNotPresent_TLB +  uGAM.GamFFTLB.TLB.tlb_MissNotPresent_TLB +  uGAM.GamCTLB.TLB.tlb_MissNotPresent_TLB +  uGAM.GamGacTLB.TLB.tlb_MissNotPresent_TLB +  uGAM.GamGavTLB.TLB.tlb_MissNotPresent_TLB))/ (D({$1}.Clocks)*numGAM)

 'uGAM\.pwr_GAMTLB_Idle\.(\w*Clock)' : 	PS2_GAMTLB_Bypass	=	D(SUM(uGAM.GamL3TLB.pwr_GAMTLB_Bypass +  uGAM.GamZTLB.pwr_GAMTLB_Bypass +  uGAM.GamFFTLB.pwr_GAMTLB_Bypass + uGAM.GamCTLB.pwr_GAMTLB_Bypass +  uGAM.GamGacTLB.pwr_GAMTLB_Bypass +  uGAM.GamGavTLB.pwr_GAMTLB_Bypass))/(D({$1}.Clocks)*numGAM)
 'uGAM\.pwr_GAMTLB_Idle\.(\w*Clock)' : 	PS2_GAMTLB_EBB_WRITE	=	PS2_GAMTLB_Miss
 'uGAM\.pwr_GAMTLB_Idle\.(\w*Clock)' : 	PS2_GAMTLB_EBB_READ	=	PS2_GAMTLB_Hit + PS2_GAMTLB_Miss + PS2_GAMTLB_HitNotPresent
			
#GAMD			
 'uGAM\.pwr_GAMTLB_Idle\.(\w*Clock)' : 	PS0_GAMD	=	D( SUM(uGAM.pwr_GAMTLB_Idle.{$1}))/(D({$1}.Clocks)*numGAM)
 'uGAM\.pwr_GAMTLB_Idle\.(\w*Clock)' : 	PS1_GAMD	=	D(SUM(uGAM.pwr_GAMTLB_Stalled_or_Idle.{$1} -  uGAM.pwr_GAMTLB_Idle.{$1}))/(D({$1}.Clocks)*numGAM)
 'uGAM\.pwr_GAMTLB_Idle\.(\w*Clock)' : 	PS2_GAMD_READ	=	D(uGAM.GtiRead)/(D({$1}.Clocks)*numGAM)
 'uGAM\.pwr_GAMTLB_Idle\.(\w*Clock)' : 	PS2_GAMD_WRITE_Media	=	0
 'uGAM\.pwr_GAMTLB_Idle\.(\w*Clock)' : 	PS2_GAMD_WRITE	=	D(uGAM.GtiWrite)/(D({$1}.Clocks)*numGAM)
 'uGAM\.pwr_GAMTLB_Idle\.(\w*Clock)' : 	PS2_GAMD_Cache_READ	=	D(uGAM.GtiRead)/(D({$1}.Clocks)*numGAM)
 'uGAM\.pwr_GAMTLB_Idle\.(\w*Clock)' : 	PS2_GAMD_Cache_WRITE	=	D(uGAM.GtiWrite)/(D({$1}.Clocks)*numGAM)
			
#GAMWalker			
 'uGAM\.pwr_GAMTLB_Idle\.(\w*Clock)' : 	PS0_GAMW	=	D(SUM(uGAM.pwr_GAMW_Idle.{$1}))/(D({$1}.Clocks)*numGAM)
 'uGAM\.pwr_GAMTLB_Idle\.(\w*Clock)' : 	PS1_GAMW	=	D(SUM(uGAM.pwr_GAMW_Stalled_or_Idle.{$1} -  uGAM.pwr_GAMW_Idle.{$1}))/(D({$1}.Clocks)*numGAM)
 'uGAM\.pwr_GAMTLB_Idle\.(\w*Clock)' : 	PS2_GAMW	=	D(SUM(D({$1}.Clocks) -  uGAM.pwr_GAMW_Stalled_or_Idle.{$1}))/(D({$1}.Clocks)*numGAM)
 'uGAM\.pwr_GAMTLB_Idle\.(\w*Clock)' : 	PS2_GAMW_Hit	=	PS2_GAMTLB_Hit
 'uGAM\.pwr_GAMTLB_Idle\.(\w*Clock)' : 	PS2_GAMW_Hit_on_Miss	=	PS2_GAMTLB_HitNotPresent
 'uGAM\.pwr_GAMTLB_Idle\.(\w*Clock)' : 	PS2_GAMW_One_Walk	=	 D((uGAM.WalkerReqStagingQ.pushed))/(D({$1}.Clocks)*numGAM)
 'uGAM\.pwr_GAMTLB_Idle\.(\w*Clock)' : 	PS2_GAMW_Two_Walk	=	0
 'uGAM\.pwr_GAMTLB_Idle\.(\w*Clock)' : 	PS2_GAMW_Three_Walk	=	0
 'uGAM\.pwr_GAMTLB_Idle\.(\w*Clock)' : 	PS2_GAMW_READ	=	D(uGAM.GTTCacheReqStagingQ.pushed)/(D({$1}.Clocks)*numGAM)
 'uGAM\.pwr_GAMTLB_Idle\.(\w*Clock)' : 	PS2_GAMW_WRITE	=	D(uGAM.GTTCacheReqStagingQ.pushed)/(D({$1}.Clocks)*numGAM)
 'uGAM\.pwr_GAMTLB_Idle\.(\w*Clock)' : 	PS2_GAMW_TLB_PEND_READ	=	D(uGAM.TLBPendDoneQ.popped)/(D({$1}.Clocks)*numGAM)
 'uGAM\.pwr_GAMTLB_Idle\.(\w*Clock)' : 	PS2_GAMW_TLB_PEND_WRITE	=	D(uGAM.TLBPendDoneQ.popped)/(D({$1}.Clocks)*numGAM)
			
#GAFM			
	PS0_GAFM	=	1
	PS1_GAFM	=	0
	PS2_GAFM	=	0
			
#GAFS			
	PS0_GAFS	=	1
	PS1_GAFS	=	0
	PS2_GAFS	=	0
			
			
#GAPL3			
 'uGAM\.pwr_GAMTLB_Idle\.(\w*Clock)' : 	PS0_GAPL3	=	D(SUM(uGAM.GapArbiter.pwr_L3Arb_Idle.{$1}))/(D({$1}.Clocks)*num_GAM_GAPL3)
 'uGAM\.pwr_GAMTLB_Idle\.(\w*Clock)' : 	PS1_GAPL3	=	D(SUM(uGAM.GapArbiter.pwr_L3Arb_Stalled_or_Idle.{$1} -  uGAM.GapArbiter.pwr_L3Arb_Idle.{$1}))/(D({$1}.Clocks)*num_GAM_GAPL3)
 'uGAM\.pwr_GAMTLB_Idle\.(\w*Clock)' : 	PS2_GAPL3	=	D(SUM(D({$1}.Clocks) -  uGAM.GapArbiter.pwr_L3Arb_Stalled_or_Idle.{$1}))/(D({$1}.Clocks)*num_GAM_GAPL3)
 			
#GAPZ			
 'uGAM\.pwr_GAMTLB_Idle\.(\w*Clock)' : 	PS0_GAPZ	=	D(SUM( uGAM.GapArbiter.pwr_ZArb_Idle.{$1}))/(D({$1}.Clocks)*num_GAM_GAPZ)
 'uGAM\.pwr_GAMTLB_Idle\.(\w*Clock)' : 	PS1_GAPZ	=	D(SUM(uGAM.GapArbiter.pwr_ZArb_Stalled_or_Idle.{$1} -  uGAM.GapArbiter.pwr_ZArb_Idle.{$1}))/(D({$1}.Clocks)*num_GAM_GAPZ)
 'uGAM\.pwr_GAMTLB_Idle\.(\w*Clock)' : 	PS2_GAPZ	=	D(SUM(D({$1}.Clocks) -  uGAM.GapArbiter.pwr_ZArb_Stalled_or_Idle.{$1}))/(D({$1}.Clocks)*num_GAM_GAPZ)
			
#GAPS			
 'uGAM\.pwr_GAMTLB_Idle\.(\w*Clock)' : 	PS0_GAPS	=	D(SUM( uGAM.GapArbiter.pwr_GAP_Idle.{$1}))/(D({$1}.Clocks)*num_GAM_GAPS)
 'uGAM\.pwr_GAMTLB_Idle\.(\w*Clock)' : 	PS1_GAPS	=	D(SUM(uGAM.GapArbiter.pwr_GAP_Stalled_or_Idle.{$1} -  uGAM.GapArbiter.pwr_GAP_Idle.{$1}))/(D({$1}.Clocks)*num_GAM_GAPS)
 'uGAM\.pwr_GAMTLB_Idle\.(\w*Clock)' : 	PS2_GAPS	=	D(SUM(D({$1}.Clocks) -  uGAM.GapArbiter.pwr_GAP_Stalled_or_Idle.{$1}))/(D({$1}.Clocks)*num_GAM_GAPS)
			
#GAPC			
 'uGAM\.pwr_GAMTLB_Idle\.(\w*Clock)' : 	PS0_GAPC	=	D(SUM(uGAM.GapArbiter.pwr_CArb_Idle.{$1}))/(D({$1}.Clocks)*num_GAM_GAPC)
 'uGAM\.pwr_GAMTLB_Idle\.(\w*Clock)' : 	PS1_GAPC	=	D(SUM(uGAM.GapArbiter.pwr_CArb_Stalled_or_Idle.{$1} -  uGAM.GapArbiter.pwr_CArb_Idle.{$1}))/(D({$1}.Clocks)*num_GAM_GAPC)
 'uGAM\.pwr_GAMTLB_Idle\.(\w*Clock)' : 	PS2_GAPC	=	D(SUM(D({$1}.Clocks) -  uGAM.GapArbiter.pwr_CArb_Stalled_or_Idle.{$1}))/(D({$1}.Clocks)*num_GAM_GAPC)
			
#GACB			
	PS0_GACB	=	1
	PS1_GACB	=	0
	PS2_GACB	=	0
			
#GAM_DOP			
	PS0_GAM_DOP	=	0
	PS2_GAM_DOP	=	1
			
#GAM_SMALL			
	PS0_GAM_SMALL	=	AVG(PS0_GAMD,PS0_GAMTLB,PS0_GAMW)
	PS2_GAM_SMALL	=	1-PS0_GAM_SMALL
			
#GAM_CPunit			
	PS0_GAM_CPunit	=	AVG(PS0_GAMD,PS0_GAMTLB,PS0_GAMW)
	PS2_GAM_CPunit	=	1-PS0_GAM_SMALL
			
#GAM_Assign			
	PS0_GAM_Assign	=	AVG(PS0_GAMD,PS0_GAMTLB,PS0_GAMW)
	PS2_GAM_Assign	=	1-PS0_GAM_SMALL
			
#GAM_Repeater			
	PS0_GAM_Repeater	=	AVG(PS0_GAMD,PS0_GAMTLB,PS0_GAMW)
	PS2_GAM_Repeater	=	1-PS0_GAM_SMALL
			
#GAM_CLKGLUE			
	PS0_GAM_CLKGLUE	=	AVG(PS0_GAMD,PS0_GAMTLB,PS0_GAMW)
	PS2_GAM_CLKGLUE	=	1-PS0_GAM_CLKGLUE
			
#GAM_NONCLKGLUE			
	PS0_GAM_NONCLKGLUE	=	AVG(PS0_GAMD,PS0_GAMTLB,PS0_GAMW)
	PS2_GAM_NONCLKGLUE	=	1-PS0_GAM_NONCLKGLUE
			
#GAM_DFX			
	PS0_GAM_DFX	=	AVG(PS0_GAMD,PS0_GAMTLB,PS0_GAMW)
	PS2_GAM_DFX	=	1-PS0_DFX
			
#GATR			
	PS0_GATR	=	1
#GATRW			
	PS0_GATRW	=	1

