#Unit	GSIM residency			Comments
#Instance Counts				
				
	numSlices	=	knob.global.NumSlices	
	num_ROSC_WMFE	=	numSlices	
	num_ROSC_WMBE	=	numSlices	
	num_ROSC_SBE	=	numSlices	
	num_ROSC_TDC	=	numSlices	
	num_ROSC_SVL	=	numSlices	
	num_ROSC_SARB	=	numSlices	
	num_ROSC_DOP	=	numSlices	
	num_ROSC_CLKGLUE	=	numSlices	
	num_ROSC_NONCLKGLUE	=	numSlices	
	num_ROSC_SMALL	=	numSlices	
	num_ROSC_CPunit	=	numSlices	
	num_ROSC_Assign	=	numSlices	
	num_ROSC_Repeater	=	numSlices	
	num_ROSC_DFX	=	numSlices	
	num_ROSC_HPSBE	=	numSlices	
				
#Generic				
	 @ANY_WM@	=	S\d+\.uWM\.	
	 @ANY_WMBEPACKETS@	=	pwr_WmBePackets\.CrClock	
	 @ANY_SBE@	=	S\d+\.uSBE\.	
	.ROSC_DOP	=	D(uCS0.pwr_3DPipeDisabled.UnsliceClock)/.UnsliceClk	
	.Clk	=	D(CrClock.Clocks)	
	.Clk.x2	=	D(SUM('2xCrClock\.Clocks'))	
	.Clk.num_ROSC_WMFE	=	.Clk * num_ROSC_WMFE	
	.Clk.num_ROSC_WMBE	=	.Clk * num_ROSC_WMBE	
	.Clk.num_ROSC_SBE	=	.Clk * num_ROSC_SBE	
	 .UnsliceClk	=	D(UnsliceClock.Clocks)	
#WMFE				
	PS0_WMFE	=	(D(SUM('@ANY_WM@pwr_WmFeIdle.CrClock'))/.Clk.num_ROSC_WMFE) - .ROSC_DOP	
	PS0_WMFE_DOP	=	.ROSC_DOP	
	PS1_WMFE	=	1 - (PS0_WMFE + PS0_WMFE_DOP + PS2_WMFE_NULLTOPSC + PS2_WMFE_NOTNULLTOPSC)	
	PS2_WMFE_NULLTOPSC	=	D(SUM('@ANY_WM@WmOutputSpanControlCount'))/.Clk.num_ROSC_WMFE	
	.temp_PS2_WMFE_NOTNULLTOPSC	=	D(SUM('@ANY_WM@WmInputObjectCount'))/.Clk.num_ROSC_WMFE	
	PS2_WMFE_NOTNULLTOPSC	=	.temp_PS2_WMFE_NOTNULLTOPSC - PS2_WMFE_NULLTOPSC	
				
#WMFE - WM POLY FIFO				
	PS2_WMFE_POLYFIFO_READ	=	.temp_PS2_WMFE_NOTNULLTOPSC	
	PS2_WMFE_POLYFIFO_WRITE	=	.temp_PS2_WMFE_NOTNULLTOPSC	
				
#WMBE				
	PS0_WMBE	=	(D(SUM('@ANY_WM@pwr_WmBeIdle.CrClock'))/.Clk.num_ROSC_WMBE) - .ROSC_DOP	
	PS0_WMBE_DOP	=	.ROSC_DOP	
	PS1_WMBE	=	1 - (PS0_WMBE + PS0_WMBE_DOP + PS2_WMBE_MSAA_FULLYLIT + PS2_WMBE_MSAA_PARTIALLYLIT + PS2_WMBE_NOMSAA_FULLYLIT + PS2_WMBE_NOMSAA_PARTIALLYLIT + PS2_WMBE_NULLTOPSC + PS2_WMBE_ANTIALIASING)	
	PS2_WMBE_MSAA_FULLYLIT	=	D(SUM('@ANY_WM@@ANY_WMBEPACKETS@.MSAA.FULLYLIT'))/.Clk.num_ROSC_WMBE	
	PS2_WMBE_MSAA_PARTIALLYLIT	=	D(SUM('@ANY_WM@@ANY_WMBEPACKETS@.MSAA.PARTIALLYLIT'))/.Clk.num_ROSC_WMBE	
	PS2_WMBE_NOMSAA_FULLYLIT	=	D(SUM('@ANY_WM@@ANY_WMBEPACKETS@.NOMSAA.FULLYLIT'))/.Clk.num_ROSC_WMBE	
	PS2_WMBE_NOMSAA_PARTIALLYLIT	=	D(SUM('@ANY_WM@@ANY_WMBEPACKETS@.NOMSAA.PARTIALLYLIT'))/.Clk.num_ROSC_WMBE	
	PS2_WMBE_NULLTOPSC	=	D(SUM('@ANY_WM@WmOutputSpanControlCount'))/.Clk.num_ROSC_WMBE	
	PS2_WMBE_ANTIALIASING	=	0	
				
#SBE				
	PS0_SBE_FETCH	=	(D(SUM('@ANY_SBE@FetchIdle.CrClock'))/.Clk.num_ROSC_SBE) - .ROSC_DOP	
	PS0_SBE_FETCH_DOP	=	.ROSC_DOP	
	PS1_SBE_FETCH	=	D(SUM('@ANY_SBE@FetchIdleOrStalled.CrClock') - SUM('@ANY_SBE@FetchIdle.CrClock'))/.Clk.num_ROSC_SBE	
	PS2_SBE_FETCH	=	1 - (PS0_SBE_FETCH + PS0_SBE_FETCH_DOP + PS1_SBE_FETCH)	
	PS0_SBE_REPLAY	=	(D(SUM('@ANY_SBE@ReplayIdle.CrClock'))/.Clk.num_ROSC_SBE) - .ROSC_DOP	
	PS0_SBE_REPLAY_DOP	=	.ROSC_DOP	
	PS1_SBE_REPLAY	=	D(SUM('@ANY_SBE@ReplayIdleOrStalled.CrClock') - SUM('@ANY_SBE@ReplayIdle.CrClock'))/.Clk.num_ROSC_SBE	
	PS2_SBE_REPLAY	=	1 - (PS0_SBE_REPLAY + PS0_SBE_REPLAY_DOP + PS1_SBE_REPLAY)	
	PS0_SBE_CALC	=	(D(SUM('@ANY_SBE@CalcIdle.CrClock'))/.Clk.num_ROSC_SBE) - .ROSC_DOP	
	PS0_SBE_CALC_DOP	=	.ROSC_DOP	
	PS1_SBE_CALC	=	D(SUM('@ANY_SBE@CalcIdleOrStalled.CrClock') - SUM('@ANY_SBE@CalcIdle.CrClock'))/.Clk.num_ROSC_SBE	
	PS2_SBE_CALC	=	1 - (PS0_SBE_CALC + PS0_SBE_CALC_DOP + PS1_SBE_CALC)	
	PS0_SBE_OTHER	=	(D(SUM('@ANY_SBE@SbeIdle.CrClock'))/.Clk.num_ROSC_SBE) - .ROSC_DOP	#Not implemented in GSIM
	PS0_SBE_OTHER_DOP	=	.ROSC_DOP	
	PS1_SBE_OTHER	=	D(SUM('@ANY_SBE@SbeIdleOrStalled.CrClock') - SUM('@ANY_SBE@SbeIdle.CrClock'))/.Clk.num_ROSC_SBE	
	PS2_SBE_OTHER	=	1 - (PS0_SBE_OTHER + PS0_SBE_OTHER_DOP + PS1_SBE_OTHER)	
				
#TDC				#Not implemented in GSIM
	PS0_TDC	=	1	
	PS1_TDC	=	0	
	PS2_TDC	=	0	
				
#SVL				#Not implemented in GSIM
	PS0_SVL	=	1	
	PS1_SVL	=	0	
	PS2_SVL	=	0	
				
#SARB				
	PS0_SARB	=	1	
	PS1_SARB	=	0	
	PS2_SARB	=	0	
				
#DOP				
	PS0_ROSC_DOP	=	.ROSC_DOP	
	PS2_ROSC_DOP	=	1 - PS0_ROSC_DOP	
				
				
#CLKGLUE				
	PS0_ROSC_CLKGLUE_DOP	=	.ROSC_DOP	
	PS0_ROSC_CLKGLUE	= AVG(PS0_WMBE,PS0_WMFE,PS0_SBE_FETCH,PS0_SBE_CALC,PS0_SBE_OTHER,PS0_SBE_REPLAY)	
	PS2_ROSC_CLKGLUE	=	1 - (PS0_ROSC_CLKGLUE_DOP + PS0_ROSC_CLKGLUE)	
				
#NONCLKGLUE				
	PS0_ROSC_NONCLKGLUE_DOP	=	.ROSC_DOP	
	PS0_ROSC_NONCLKGLUE	=	AVG(PS0_WMBE,PS0_WMFE,PS0_SBE_FETCH,PS0_SBE_CALC,PS0_SBE_OTHER,PS0_SBE_REPLAY)	
	PS2_ROSC_NONCLKGLUE	=	1 - (PS0_ROSC_CLKGLUE_DOP + PS0_ROSC_CLKGLUE)	
				
#SMALL				
	PS0_ROSC_SMALL_DOP	=	.ROSC_DOP	
	PS0_ROSC_SMALL	=	AVG(PS0_WMBE,PS0_WMFE,PS0_SBE_FETCH,PS0_SBE_CALC,PS0_SBE_OTHER,PS0_SBE_REPLAY)	
	PS2_ROSC_SMALL	=	1 - (PS0_ROSC_CLKGLUE_DOP + PS0_ROSC_CLKGLUE)	
				
#CPunit				
	PS0_ROSC_CPunit_DOP	=	.ROSC_DOP	
	PS0_ROSC_CPunit	=	AVG(PS0_WMBE,PS0_WMFE,PS0_SBE_FETCH,PS0_SBE_CALC,PS0_SBE_OTHER,PS0_SBE_REPLAY)	
	PS2_ROSC_CPunit	=	1 - (PS0_ROSC_CLKGLUE_DOP + PS0_ROSC_CLKGLUE)	
				
#Assign				
	PS0_ROSC_Assign_DOP	=	.ROSC_DOP	
	PS0_ROSC_Assign	=	AVG(PS0_WMBE,PS0_WMFE,PS0_SBE_FETCH,PS0_SBE_CALC,PS0_SBE_OTHER,PS0_SBE_REPLAY)	
	PS2_ROSC_Assign	=	1 - (PS0_ROSC_CLKGLUE_DOP + PS0_ROSC_CLKGLUE)	
				
#Repeater				
	PS0_ROSC_Repeater_DOP	=	.ROSC_DOP	
	PS0_ROSC_Repeater	=	AVG(PS0_WMBE,PS0_WMFE,PS0_SBE_FETCH,PS0_SBE_CALC,PS0_SBE_OTHER,PS0_SBE_REPLAY)	
	PS2_ROSC_Repeater	=	1 - (PS0_ROSC_CLKGLUE_DOP + PS0_ROSC_CLKGLUE)	
				
#DFX				
	PS0_ROSC_DFX_DOP	=	.ROSC_DOP	
	PS0_ROSC_DFX	=	AVG(PS0_WMBE,PS0_WMFE,PS0_SBE_FETCH,PS0_SBE_CALC,PS0_SBE_OTHER,PS0_SBE_REPLAY)	
	PS2_ROSC_DFX	=	1 - (PS0_ROSC_CLKGLUE_DOP + PS0_ROSC_CLKGLUE)	
				
#HPSBE				
	PS0_HPSBE	=	1	

