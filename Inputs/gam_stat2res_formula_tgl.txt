#Unit	GSIM residency		
#Instance Counts			
  numSlices	=       knob.global.NumSlices + SUM('knob\.STK\d\.NumSlices')	
  numGAM	=	COUNT('knob\.uGAM\.NumSlices')
  numSubslices	=	SUM('knob\.S\d+\.NumSubSlices')	#Change to handle assymetric configs
  numCPipesGAM	=	SUM('knob\.S\d+\.NumColorPipes')
  numZPipesGAM	=	SUM('knob\.S\d+\.NumZPipes')
  num_GAM_GAMWC	=	numGAM
  num_GAM_GAMWC_PENDQEBB	= numGAM
  num_GAM_GAMWD	=	numGAM
  num_GAM_GAMWD_WRKPDEBB	= numGAM
  num_GAM_GACB	=	numGAM
  num_GAM_GAMD	=	numGAM
  num_GAM_GAMD_WB_HW_GAMDEBB = numGAM
  num_GAM_GAMD_WCPEBB = numGAM
  num_GAM_GAMD_RCPEBB = numGAM
  num_GAM_MARB	=	numGAM
  num_GAM_GAMTG	=	numGAM
  num_GAM_GAMTG_L3TLBEBB	=	numGAM
  num_GAM_GAMTG_CVSTLBEBB	=	numGAM
  num_GAM_GAMTO	=	numGAM
  num_GAM_GAMTO_MFXEBB	=	numGAM
  num_GAM_GAMTO_VEBXTLBEBB	=	numGAM
  num_GAM_GAMTO_BWGTLBEBB	=	numGAM
  num_GAM_GAPL3	=	numSlices
  num_GAM_GASS	=	numSubslices
  num_GAM_DOP	=	numGAM
  num_GAM_CLKGLUE	=	numGAM
  num_GAM_NONCLKGLUE	=	numGAM
  num_GAM_SMALL	        =	numGAM
  num_GAM_CPunit	=	numGAM
  num_GAM_Assign	=	numGAM
  num_GAM_Repeater	=	numGAM
  num_GAM_DFX	=	numGAM
  num_GAM_GATR	=	numGAM
  num_GAM_GATRW	=	numGAM

  num_GAM_GAMCMDI = numGAM
  num_GAM_GAMDATI = numGAM
  num_GAM_GAMSTLB = numGAM
  num_GAM_GAMFTLB = numGAM
  num_GAM_GAMWKRS = numGAM
  num_GAM_GAMREQSTRM = numGAM
  num_GAM_GAMDRTN    = numGAM

  num_GAM_GADSS    = numSubSlices 
  num_GAM_GAFM	   = numGAM
  num_GAM_GAFD	   = numGAM
  num_GAM_GAFSRD   = numGAM
  num_GAM_GAFSWR   = numGAM
  num_GAM_GAPZ	   = numZPipesGAM
  num_GAM_GAPC	   = numCPipesGAM
  num_GAM_GAPS     = numSlices
  num_GAM_SARB	   = numSlices
  num_GAM_GAFARB   = numGAM
   
   @GAPL3@        =    (STK\d+\.S\d+\.uL3\.GapL3InputBuf\d+\.|S\d+\.uL3\.GapL3InputBuf(\d+|)\.)
   @GAPZ@         =    S\d+\.(GAPZ\.|GAPZPipe_\d+\.)
   @GAPC@         =    S\d+\.(GAPCPPipe_\d+\.|GAPCPipe_\d+\.)
   @GAPS@         =    S\d+\.uL3\.
   @GASS@  	  =    S\d+\.GASS_\d+\.
   @GATS@         =    S\d+\.GATS_\d+\.
   @SARB@	  =    S\d+\.uL3\.SARB\.
   @CLOCKS@	  =    D(CrClock.Clocks)
   @CLOCKS2X@     =    D('2xCrClock.Clocks')	#temporary fix for GAM running on 2xCrClock in Gen12LP
   @UNSLICECLOCKS@=    D(UnsliceClock.Clocks)
   @GAFM@         =    S\d+\.uL3\.LNI_\d+\.
			
#GASS
  PS0_GADSS        =     (.temp_gadss_ps2 < 1)? (1 - .temp_gadss_ps2) : 0
  .temp_gadss_ps2  =     PS1_GADSS + PS2_GADSS 
  PS1_GADSS	   =     (D(SUM('@GASS@Stalled'))+ D(SUM('@GATS@Stalled'))) /(@CLOCKS@ * num_GAM_GADSS)
  PS2_GADSS        =     (D(SUM('@GASS@Active')) +  D(SUM('@GATS@Active')))/(@CLOCKS@ * num_GAM_GADSS)

#GAFM
  PS2_RD_GAFM      =     (D(SUM('@GAFM@_FFLNIBypassRead')))/(@CLOCKS@ * num_GAM_GAFM)
  PS2_WR_GAFM      =     (D(SUM('@GAFM@_FFLNIBypassWrite')))/(@CLOCKS@ * num_GAM_GAFM)

#GAFD
  PS2_RD_GAFD      =     (D(SUM('@GAFM@_FFLNIBypassRead')))/(@CLOCKS@ * num_GAM_GAFD)
  PS2_WR_GAFD      =     (D(SUM('@GAFM@_FFLNIBypassWrite')))/(@CLOCKS@ * num_GAM_GAFD)
    			
#GAFARB
  PS2_GAFARB_RD       =     (D(SUM('@GAFM@_FFLNIBypassRead')))/(@CLOCKS@ * num_GAM_GAFARB)
  PS2_GAFARB_1WR      =     (D(SUM('@GAFM@_FFLNIBypassWrite')))/(2 * @CLOCKS@ * num_GAM_GAFARB)
  PS2_GAFARB_2WR      =     (D(SUM('@GAFM@_FFLNIBypassWrite')))/(2 * @CLOCKS@ * num_GAM_GAFARB)

#GAM_DOP			
  PS0_GAM_DOP	        =	0
  PS2_GAM_DOP	        =	1
			
#GAM_SMALL			
  PS0_GAM_SMALL	        =	AVG(PS0_GAMCMDI_GFX_IDLE,PS0_GAMDATI,PS0_GAMFTLB,PS0_GAMSTLB,PS0_GAMWKRS,PS0_GAMREQSTRM,PS0_GAMDRTN)
  PS1_GAM_SMALL	        =	AVG(PS1_GAMCMDI_GFX_IDLE,PS1_GAMDATI,PS1_GAMFTLB,PS1_GAMSTLB,PS1_GAMWKRS,PS1_GAMREQSTRM,PS1_GAMDRTN)
  PS2_GAM_SMALL	        =	1-PS0_GAM_SMALL-PS1_GAM_SMALL
			
#GAM_CPunit			
  PS0_GAM_CPunit	=	AVG(PS0_GAMCMDI_GFX_IDLE,PS0_GAMDATI,PS0_GAMFTLB,PS0_GAMSTLB,PS0_GAMWKRS,PS0_GAMREQSTRM,PS0_GAMDRTN)
  PS2_GAM_CPunit	=	1-PS0_GAM_CPunit
			
#GAM_Assign			
  PS0_GAM_Assign	=	AVG(PS0_GAMCMDI_GFX_IDLE,PS0_GAMDATI,PS0_GAMFTLB,PS0_GAMSTLB,PS0_GAMWKRS,PS0_GAMREQSTRM,PS0_GAMDRTN)
  PS2_GAM_Assign	=	1-PS0_GAM_Assign
			
#GAM_Repeater			
  PS0_GAM_Repeater	=	AVG(PS0_GAMCMDI_GFX_IDLE,PS0_GAMDATI,PS0_GAMFTLB,PS0_GAMSTLB,PS0_GAMWKRS,PS0_GAMREQSTRM,PS0_GAMDRTN)
  PS1_GAM_Repeater	=	AVG(PS1_GAMCMDI_GFX_IDLE,PS1_GAMDATI,PS1_GAMFTLB,PS1_GAMSTLB,PS1_GAMWKRS,PS1_GAMREQSTRM,PS1_GAMDRTN)
  PS2_GAM_Repeater	=	1-PS0_GAM_Repeater-PS1_GAM_Repeater
			
#GAM_CLKGLUE			
  PS0_GAM_CLKGLUE	=	AVG(PS0_GAMCMDI_GFX_IDLE,PS0_GAMDATI,PS0_GAMFTLB,PS0_GAMSTLB,PS0_GAMWKRS,PS0_GAMREQSTRM,PS0_GAMDRTN)
  PS2_GAM_CLKGLUE	=	1-PS0_GAM_CLKGLUE
			
#GAM_NONCLKGLUE			
  PS0_GAM_NONCLKGLUE	=	AVG(PS0_GAMCMDI_GFX_IDLE,PS0_GAMDATI,PS0_GAMFTLB,PS0_GAMSTLB,PS0_GAMWKRS,PS0_GAMREQSTRM,PS0_GAMDRTN)
  PS1_GAM_NONCLKGLUE	=	AVG(PS1_GAMCMDI_GFX_IDLE,PS1_GAMDATI,PS1_GAMFTLB,PS1_GAMSTLB,PS1_GAMWKRS,PS1_GAMREQSTRM,PS1_GAMDRTN)
  PS2_GAM_NONCLKGLUE	=	1-PS0_GAM_NONCLKGLUE-PS1_GAM_NONCLKGLUE
			
#GAM_DFX			
  PS0_GAM_DFX	=	AVG(PS0_GAMCMDI_GFX_IDLE,PS0_GAMDATI,PS0_GAMFTLB,PS0_GAMSTLB,PS0_GAMWKRS,PS0_GAMREQSTRM,PS0_GAMDRTN)
  PS2_GAM_DFX	=	1-PS0_GAM_DFX

#GAMCMDI
  PS0_GAMCMDI_GFX_IDLE = D(uGAM.PS0_GAMCMDI_GFX_IDLE)/(@CLOCKS@ * numGAM)
  PS1_GAMCMDI_GFX_STALLED = D(uGAM.PS1_GAMCMDI_GFX_STALLED)/(@CLOCKS@ * numGAM)
  PS2_GAMCMDI_GFX_ACTIVE_1RD = D(uGAM.PS2_GAMCMDI_GFX_ACTIVE_1RD)/(@CLOCKS@ * numGAM)
  PS2_GAMCMDI_GFX_ACTIVE_2RD = D(uGAM.PS2_GAMCMDI_GFX_ACTIVE_2RD)/(@CLOCKS@ * numGAM)
  PS2_GAMCMDI_GFX_ACTIVE_3RD = D(uGAM.PS2_GAMCMDI_GFX_ACTIVE_3RD)/(@CLOCKS@ * numGAM)
  PS2_GAMCMDI_GFX_ACTIVE_4RD = D(uGAM.PS2_GAMCMDI_GFX_ACTIVE_4RD)/(@CLOCKS@ * numGAM)
  PS2_GAMCMDI_GFX_ACTIVE_1WR = D(uGAM.PS2_GAMCMDI_GFX_ACTIVE_1WR)/(@CLOCKS@ * numGAM)
  PS2_GAMCMDI_GFX_ACTIVE_2WR = D(uGAM.PS2_GAMCMDI_GFX_ACTIVE_2WR)/(@CLOCKS@ * numGAM)
  PS2_GAMCMDI_GFX_ACTIVE_3WR = D(uGAM.PS2_GAMCMDI_GFX_ACTIVE_3WR)/(@CLOCKS@ * numGAM)
  PS2_GAMCMDI_GFX_ACTIVE_4WR = D(uGAM.PS2_GAMCMDI_GFX_ACTIVE_4WR)/(@CLOCKS@ * numGAM)

  PS0_GAMCMDI_HDC_IDLE = D(uGAM.PS0_GAMCMDI_HDC_IDLE)/(@CLOCKS@ * numGAM)
  PS1_GAMCMDI_HDC_STALLED = D(uGAM.PS1_GAMCMDI_HDC_STALLED)/(@CLOCKS@ * numGAM)
  PS2_GAMCMDI_HDC_ACTIVE_1RD = D(uGAM.PS2_GAMCMDI_HDC_ACTIVE_1RD)/(@CLOCKS@ * numGAM)
  PS2_GAMCMDI_HDC_ACTIVE_2RD = D(uGAM.PS2_GAMCMDI_HDC_ACTIVE_2RD)/(@CLOCKS@ * numGAM)
  PS2_GAMCMDI_HDC_ACTIVE_1WR = D(uGAM.PS2_GAMCMDI_HDC_ACTIVE_1WR)/(@CLOCKS@ * numGAM)
  PS2_GAMCMDI_HDC_ACTIVE_2WR = D(uGAM.PS2_GAMCMDI_HDC_ACTIVE_2WR)/(@CLOCKS@ * numGAM)

  PS0_GAMCMDI_NONGFX_IDLE = D(uGAM.PS0_GAMCMDI_NONGFX_IDLE)/(@CLOCKS@ * numGAM)
  PS1_GAMCMDI_NONGFX_STALLED = D(uGAM.PS1_GAMCMDI_NONGFX_STALLED)/(@CLOCKS@ * numGAM)
  PS2_GAMCMDI_NONGFX_ACTIVE_1RD = D(uGAM.PS2_GAMCMDI_NONGFX_ACTIVE_1RD)/(@CLOCKS@ * numGAM)
  PS2_GAMCMDI_NONGFX_ACTIVE_2RD = D(uGAM.PS2_GAMCMDI_NONGFX_ACTIVE_2RD)/(@CLOCKS@ * numGAM)
  PS2_GAMCMDI_NONGFX_ACTIVE_3RD = D(uGAM.PS2_GAMCMDI_NONGFX_ACTIVE_3RD)/(@CLOCKS@ * numGAM)
  PS2_GAMCMDI_NONGFX_ACTIVE_4RD = D(uGAM.PS2_GAMCMDI_NONGFX_ACTIVE_4RD)/(@CLOCKS@ * numGAM)
  PS2_GAMCMDI_NONGFX_ACTIVE_1WR = D(uGAM.PS2_GAMCMDI_NONGFX_ACTIVE_1WR)/(@CLOCKS@ * numGAM)
  PS2_GAMCMDI_NONGFX_ACTIVE_2WR = D(uGAM.PS2_GAMCMDI_NONGFX_ACTIVE_2WR)/(@CLOCKS@ * numGAM)
  PS2_GAMCMDI_NONGFX_ACTIVE_3WR = D(uGAM.PS2_GAMCMDI_NONGFX_ACTIVE_3WR)/(@CLOCKS@ * numGAM)
  PS2_GAMCMDI_NONGFX_ACTIVE_4WR = D(uGAM.PS2_GAMCMDI_NONGFX_ACTIVE_4WR)/(@CLOCKS@ * numGAM)
 
#GAMDATI
  PS0_GAMDATI = 1 - (PS2_GAMCMDI_GFX_ACTIVE_1WR + PS2_GAMCMDI_GFX_ACTIVE_2WR + PS2_GAMCMDI_GFX_ACTIVE_3WR + PS2_GAMCMDI_GFX_ACTIVE_4WR)
  PS2_GAMDATI_1WR = D(uGAM.PS2_GAMCMDI_GFX_ACTIVE_1WR)/(@CLOCKS@ * numGAM)
  PS2_GAMDATI_2WR = D(uGAM.PS2_GAMCMDI_GFX_ACTIVE_2WR)/(@CLOCKS@ * numGAM)

#GAMFTLB
  PS0_GAMFTLB_GFX0_IDLE = D(uGAM.PS0_GAMFTLB_GFX0_IDLE)/(@CLOCKS@ * numGAM)
  PS1_GAMFTLB_GFX0_STALLED = D(uGAM.PS1_GAMFTLB_GFX0_STALLED)/(@CLOCKS@ * numGAM)
  PS2_GAMFTLB_GFX0_ACTIVE_1H = D(uGAM.PS2_GAMFTLB_GFX0_ACTIVE_1H)/(@CLOCKS@ * numGAM)
  PS2_GAMFTLB_GFX0_ACTIVE_2H = D(uGAM.PS2_GAMFTLB_GFX0_ACTIVE_2H)/(@CLOCKS@ * numGAM)
  PS2_GAMFTLB_GFX0_ACTIVE_1MPH = D(uGAM.PS2_GAMFTLB_GFX0_ACTIVE_1MPH)/(@CLOCKS@ * numGAM)
  PS2_GAMFTLB_GFX0_ACTIVE_2MPH = D(uGAM.PS2_GAMFTLB_GFX0_ACTIVE_2MPH)/(@CLOCKS@ * numGAM)
  PS2_GAMFTLB_GFX0_ACTIVE_1MPM = D(uGAM.PS2_GAMFTLB_GFX0_ACTIVE_1MPM)/(@CLOCKS@ * numGAM)
  PS2_GAMFTLB_GFX0_ACTIVE_2MPM = D(uGAM.PS2_GAMFTLB_GFX0_ACTIVE_2MPM)/(@CLOCKS@ * numGAM)
  PS2_GAMFTLB_GFX0_ACTIVE_1H1MPH = D(uGAM.PS2_GAMFTLB_GFX0_ACTIVE_1H1MPH)/(@CLOCKS@ * numGAM)
  PS2_GAMFTLB_GFX0_ACTIVE_1H1MPM = D(uGAM.PS2_GAMFTLB_GFX0_ACTIVE_1H1MPM)/(@CLOCKS@ * numGAM)
  PS2_GAMFTLB_GFX0_ACTIVE_1MPH1MPM = D(uGAM.PS2_GAMFTLB_GFX0_ACTIVE_1MPH1MPM)/(@CLOCKS@ * numGAM)

  PS0_GAMFTLB_GFX1_IDLE = D(uGAM.PS0_GAMFTLB_GFX1_IDLE)/(@CLOCKS@ * numGAM)
  PS1_GAMFTLB_GFX1_STALLED = D(uGAM.PS1_GAMFTLB_GFX1_STALLED)/(@CLOCKS@ * numGAM)
  PS2_GAMFTLB_GFX1_ACTIVE_1H = D(uGAM.PS2_GAMFTLB_GFX1_ACTIVE_1H)/(@CLOCKS@ * numGAM)
  PS2_GAMFTLB_GFX1_ACTIVE_2H = D(uGAM.PS2_GAMFTLB_GFX1_ACTIVE_2H)/(@CLOCKS@ * numGAM)
  PS2_GAMFTLB_GFX1_ACTIVE_1MPH = D(uGAM.PS2_GAMFTLB_GFX1_ACTIVE_1MPH)/(@CLOCKS@ * numGAM)
  PS2_GAMFTLB_GFX1_ACTIVE_2MPH = D(uGAM.PS2_GAMFTLB_GFX1_ACTIVE_2MPH)/(@CLOCKS@ * numGAM)
  PS2_GAMFTLB_GFX1_ACTIVE_1MPM = D(uGAM.PS2_GAMFTLB_GFX1_ACTIVE_1MPM)/(@CLOCKS@ * numGAM)
  PS2_GAMFTLB_GFX1_ACTIVE_2MPM = D(uGAM.PS2_GAMFTLB_GFX1_ACTIVE_2MPM)/(@CLOCKS@ * numGAM)
  PS2_GAMFTLB_GFX1_ACTIVE_1H1MPH = D(uGAM.PS2_GAMFTLB_GFX1_ACTIVE_1H1MPH)/(@CLOCKS@ * numGAM)
  PS2_GAMFTLB_GFX1_ACTIVE_1H1MPM = D(uGAM.PS2_GAMFTLB_GFX1_ACTIVE_1H1MPM)/(@CLOCKS@ * numGAM)
  PS2_GAMFTLB_GFX1_ACTIVE_1MPH1MPM = D(uGAM.PS2_GAMFTLB_GFX1_ACTIVE_1MPH1MPM)/(@CLOCKS@ * numGAM)

  PS0_GAMFTLB_NONGFX0_IDLE = D(uGAM.PS0_GAMFTLB_NONGFX0_IDLE)/(@CLOCKS@ * numGAM)
  PS1_GAMFTLB_NONGFX0_STALLED = D(uGAM.PS1_GAMFTLB_NONGFX0_STALLED)/(@CLOCKS@ * numGAM)
  PS2_GAMFTLB_NONGFX0_ACTIVE_1H = D(uGAM.PS2_GAMFTLB_NONGFX0_ACTIVE_1H)/(@CLOCKS@ * numGAM)
  PS2_GAMFTLB_NONGFX0_ACTIVE_2H = D(uGAM.PS2_GAMFTLB_NONGFX0_ACTIVE_2H)/(@CLOCKS@ * numGAM)
  PS2_GAMFTLB_NONGFX0_ACTIVE_1MPH = D(uGAM.PS2_GAMFTLB_NONGFX0_ACTIVE_1MPH)/(@CLOCKS@ * numGAM)
  PS2_GAMFTLB_NONGFX0_ACTIVE_2MPH = D(uGAM.PS2_GAMFTLB_NONGFX0_ACTIVE_2MPH)/(@CLOCKS@ * numGAM)
  PS2_GAMFTLB_NONGFX0_ACTIVE_1MPM = D(uGAM.PS2_GAMFTLB_NONGFX0_ACTIVE_1MPM)/(@CLOCKS@ * numGAM)
  PS2_GAMFTLB_NONGFX0_ACTIVE_2MPM = D(uGAM.PS2_GAMFTLB_NONGFX0_ACTIVE_2MPM)/(@CLOCKS@ * numGAM)
  PS2_GAMFTLB_NONGFX0_ACTIVE_1H1MPH = D(uGAM.PS2_GAMFTLB_NONGFX0_ACTIVE_1H1MPH)/(@CLOCKS@ * numGAM)
  PS2_GAMFTLB_NONGFX0_ACTIVE_1H1MPM = D(uGAM.PS2_GAMFTLB_NONGFX0_ACTIVE_1H1MPM)/(@CLOCKS@ * numGAM)
  PS2_GAMFTLB_NONGFX0_ACTIVE_1MPH1MPM = D(uGAM.PS2_GAMFTLB_NONGFX0_ACTIVE_1MPH1MPM)/(@CLOCKS@ * numGAM)

  PS0_GAMFTLB_NONGFX1_IDLE = D(uGAM.PS0_GAMFTLB_NONGFX1_IDLE)/(@CLOCKS@ * numGAM)
  PS1_GAMFTLB_NONGFX1_STALLED = D(uGAM.PS1_GAMFTLB_NONGFX1_STALLED)/(@CLOCKS@ * numGAM)
  PS2_GAMFTLB_NONGFX1_ACTIVE_1H = D(uGAM.PS2_GAMFTLB_NONGFX1_ACTIVE_1H)/(@CLOCKS@ * numGAM)
  PS2_GAMFTLB_NONGFX1_ACTIVE_2H = D(uGAM.PS2_GAMFTLB_NONGFX1_ACTIVE_2H)/(@CLOCKS@ * numGAM)
  PS2_GAMFTLB_NONGFX1_ACTIVE_1MPH = D(uGAM.PS2_GAMFTLB_NONGFX1_ACTIVE_1MPH)/(@CLOCKS@ * numGAM)
  PS2_GAMFTLB_NONGFX1_ACTIVE_2MPH = D(uGAM.PS2_GAMFTLB_NONGFX1_ACTIVE_2MPH)/(@CLOCKS@ * numGAM)
  PS2_GAMFTLB_NONGFX1_ACTIVE_1MPM = D(uGAM.PS2_GAMFTLB_NONGFX1_ACTIVE_1MPM)/(@CLOCKS@ * numGAM)
  PS2_GAMFTLB_NONGFX1_ACTIVE_2MPM = D(uGAM.PS2_GAMFTLB_NONGFX1_ACTIVE_2MPM)/(@CLOCKS@ * numGAM)
  PS2_GAMFTLB_NONGFX1_ACTIVE_1H1MPH = D(uGAM.PS2_GAMFTLB_NONGFX1_ACTIVE_1H1MPH)/(@CLOCKS@ * numGAM)
  PS2_GAMFTLB_NONGFX1_ACTIVE_1H1MPM = D(uGAM.PS2_GAMFTLB_NONGFX1_ACTIVE_1H1MPM)/(@CLOCKS@ * numGAM)
  PS2_GAMFTLB_NONGFX1_ACTIVE_1MPH1MPM = D(uGAM.PS2_GAMFTLB_NONGFX1_ACTIVE_1MPH1MPM)/(@CLOCKS@ * numGAM)

  PS0_GAMFTLB_OTHER = 1
 
#GAMSTLB
  PS0_GAMSTLB_B0_IDLE = D(uGAM.PS0_GAMSTLB_B0_IDLE)/(@CLOCKS@ * numGAM)
  PS1_GAMSTLB_B0_STALLED = D(uGAM.PS1_GAMSTLB_B0_STALLED)/(@CLOCKS@ * numGAM)
  PS2_GAMSTLB_B0_ACTIVE_1H = D(uGAM.PS2_GAMSTLB_B0_ACTIVE_1H)/(@CLOCKS@ * numGAM)
  PS2_GAMSTLB_B0_ACTIVE_2H = D(uGAM.PS2_GAMSTLB_B0_ACTIVE_2H)/(@CLOCKS@ * numGAM)
  PS2_GAMSTLB_B0_ACTIVE_1M = D(uGAM.PS2_GAMSTLB_B0_ACTIVE_1M)/(@CLOCKS@ * numGAM)
  PS2_GAMSTLB_B0_ACTIVE_2M = D(uGAM.PS2_GAMSTLB_B0_ACTIVE_2M)/(@CLOCKS@ * numGAM)
  PS2_GAMSTLB_B0_ACTIVE_1H1M = D(uGAM.PS2_GAMSTLB_B0_ACTIVE_1H1M)/(@CLOCKS@ * numGAM)
 
  PS0_GAMSTLB_B1_IDLE = D(uGAM.PS0_GAMSTLB_B1_IDLE)/(@CLOCKS@ * numGAM)
  PS1_GAMSTLB_B1_STALLED = D(uGAM.PS1_GAMSTLB_B1_STALLED)/(@CLOCKS@ * numGAM)
  PS2_GAMSTLB_B1_ACTIVE_1H = D(uGAM.PS2_GAMSTLB_B1_ACTIVE_1H)/(@CLOCKS@ * numGAM)
  PS2_GAMSTLB_B1_ACTIVE_2H = D(uGAM.PS2_GAMSTLB_B1_ACTIVE_2H)/(@CLOCKS@ * numGAM)
  PS2_GAMSTLB_B1_ACTIVE_1M = D(uGAM.PS2_GAMSTLB_B1_ACTIVE_1M)/(@CLOCKS@ * numGAM)
  PS2_GAMSTLB_B1_ACTIVE_2M = D(uGAM.PS2_GAMSTLB_B1_ACTIVE_2M)/(@CLOCKS@ * numGAM)
  PS2_GAMSTLB_B1_ACTIVE_1H1M = D(uGAM.PS2_GAMSTLB_B1_ACTIVE_1H1M)/(@CLOCKS@ * numGAM)

  PS0_GAMSTLB_B2_IDLE = D(uGAM.PS0_GAMSTLB_B2_IDLE)/(@CLOCKS@ * numGAM)
  PS1_GAMSTLB_B2_STALLED = D(uGAM.PS1_GAMSTLB_B2_STALLED)/(@CLOCKS@ * numGAM)
  PS2_GAMSTLB_B2_ACTIVE_1H = D(uGAM.PS2_GAMSTLB_B2_ACTIVE_1H)/(@CLOCKS@ * numGAM)
  PS2_GAMSTLB_B2_ACTIVE_2H = D(uGAM.PS2_GAMSTLB_B2_ACTIVE_2H)/(@CLOCKS@ * numGAM)
  PS2_GAMSTLB_B2_ACTIVE_1M = D(uGAM.PS2_GAMSTLB_B2_ACTIVE_1M)/(@CLOCKS@ * numGAM)
  PS2_GAMSTLB_B2_ACTIVE_2M = D(uGAM.PS2_GAMSTLB_B2_ACTIVE_2M)/(@CLOCKS@ * numGAM)
  PS2_GAMSTLB_B2_ACTIVE_1H1M = D(uGAM.PS2_GAMSTLB_B2_ACTIVE_1H1M)/(@CLOCKS@ * numGAM)

  PS0_GAMSTLB_B3_IDLE = D(uGAM.PS0_GAMSTLB_B3_IDLE)/(@CLOCKS@ * numGAM)
  PS1_GAMSTLB_B3_STALLED = D(uGAM.PS1_GAMSTLB_B3_STALLED)/(@CLOCKS@ * numGAM)
  PS2_GAMSTLB_B3_ACTIVE_1H = D(uGAM.PS2_GAMSTLB_B3_ACTIVE_1H)/(@CLOCKS@ * numGAM)
  PS2_GAMSTLB_B3_ACTIVE_2H = D(uGAM.PS2_GAMSTLB_B3_ACTIVE_2H)/(@CLOCKS@ * numGAM)
  PS2_GAMSTLB_B3_ACTIVE_1M = D(uGAM.PS2_GAMSTLB_B3_ACTIVE_1M)/(@CLOCKS@ * numGAM)
  PS2_GAMSTLB_B3_ACTIVE_2M = D(uGAM.PS2_GAMSTLB_B3_ACTIVE_2M)/(@CLOCKS@ * numGAM)
  PS2_GAMSTLB_B3_ACTIVE_1H1M = D(uGAM.PS2_GAMSTLB_B3_ACTIVE_1H1M)/(@CLOCKS@ * numGAM)
 
#GAMWKRS
  PS0_GAMWKRS_IDLE = D(uGAM.PS0_GAMWKRS_IDLE)/(@CLOCKS@ * numGAM)
  PS1_GAMWKRS_STALLED = D(uGAM.PS1_GAMWKRS_STALLED)/(@CLOCKS@ * numGAM)
  PS2_GAMWKRS_ACTIVE_IA = D(uGAM.PS2_GAMWKRS_ACTIVE_IA)/(@CLOCKS@ * numGAM)

#GAMEQSTRM
  PS0_GAMREQSTRM_IDLE = D(uGAM.PS0_GAMREQSTRM_IDLE)/(@CLOCKS@ * numGAM)
  PS1_GAMREQSTRM_STALLED = D(uGAM.PS1_GAMREQSTRM_STALLED)/(@CLOCKS@ * numGAM)
  PS2_GAMREQSTRM_ACTIVE_1RD = D(uGAM.PS2_GAMREQSTRM_ACTIVE_1RD)/(@CLOCKS@ * numGAM)
  PS2_GAMREQSTRM_ACTIVE_2RD = D(uGAM.PS2_GAMREQSTRM_ACTIVE_2RD)/(@CLOCKS@ * numGAM)
  PS2_GAMREQSTRM_ACTIVE_3RD = D(uGAM.PS2_GAMREQSTRM_ACTIVE_3RD)/(@CLOCKS@ * numGAM)
  PS2_GAMREQSTRM_ACTIVE_4RD = D(uGAM.PS2_GAMREQSTRM_ACTIVE_4RD)/(@CLOCKS@ * numGAM)
  PS2_GAMREQSTRM_ACTIVE_1WR = D(uGAM.PS2_GAMREQSTRM_ACTIVE_1WR)/(@CLOCKS@ * numGAM)
  PS2_GAMREQSTRM_ACTIVE_2WR = D(uGAM.PS2_GAMREQSTRM_ACTIVE_2WR)/(@CLOCKS@ * numGAM)

#GAMDRTN
  PS0_GAMDRTN   =   D(SUM(uGAM.PS0_GAMD))/(@CLOCKS@*numGAM)
  PS1_GAMDRTN   =   D(SUM(uGAM.PS1_GAMD))/(@CLOCKS@*numGAM)
  PS2_GAMDRTN   =   D(SUM(uGAM.PS2_GAMD_READ))/(@CLOCKS@*numGAM)

  PS0_GAFM = D(uGAM.PS0_GAFM)/(@CLOCKS@ * numGAM)
  PS1_GAFM = D(uGAM.PS1_GAFM)/(@CLOCKS@ * numGAM)
  PS2_RD_GAFM  = D(uGAM.PS2_RD_GAFM)/(@CLOCKS@ * numGAM)
  PS2_WR_GAFM  = D(uGAM.PS2_WR_GAFM)/(@CLOCKS@ * numGAM)

#GAFSWR ( No mem return path in Gen11 for both GAFSRD & GAFSWR hence these residencies are assigned to Idle)			
  PS0_GAFSWR      =       1 - PS1_GAFSWR - PS2_GAFSWR
  PS1_GAFSWR	  =	  D(SUM(uLSNEND_0.Stalled))/(@UNSLICECLOCKS@*numGAM) 
  PS2_GAFSWR	  =	  (D(SUM(uLSNEND_0.WriteOnlyCycles)) + D(SUM(uLSNEND_0.ReadWriteCycles)))/(@UNSLICECLOCKS@*numGAM)

#GAFSRD			
  PS0_GAFSRD      =       1 - PS1_GAFSRD - PS2_GAFSRD 
  PS1_GAFSRD	  =	  D(SUM(uLSNEND_0.Stalled))/(@UNSLICECLOCKS@*numGAM) 
  PS2_GAFSRD	  =	  (D(SUM(uLSNEND_0.ReadOnlyCycles)) + D(SUM(uLSNEND_0.ReadWriteCycles)))/(@UNSLICECLOCKS@*numGAM)

#GAPC
  PS0_GAPC        =       D(SUM('@GAPC@Idle'))/(@CLOCKS@ * num_GAM_GAPC)
  PS1_GAPC	  =       D(SUM('@GAPC@Stalled'))/(@CLOCKS@ * num_GAM_GAPC)
  PS2_GAPC        =       D(SUM('@GAPC@Active'))/(@CLOCKS@ * num_GAM_GAPC)

#GAPS			
  PS0_GAPS        =       (PS1_GAPS + PS2_GAPS > 1) ? 0 : (1 - PS1_GAPS - PS2_GAPS)
  PS1_GAPS        =       D(SUM('@GAPS@GapsStalled'))/(@CLOCKS@ * num_GAM_GAPS)
  PS2_GAPS        =       D(SUM('@GAPS@GapsActive'))/(@CLOCKS@ * num_GAM_GAPS)

#GAPZ			
  PS0_GAPZ        =       D(SUM('@GAPZ@Idle'))/(@CLOCKS@ * num_GAM_GAPZ)
  PS1_GAPZ        =       D(SUM('@GAPZ@Stalled'))/(@CLOCKS@ * num_GAM_GAPZ)
  PS2_GAPZ        =	  D(SUM('@GAPZ@Active'))/(@CLOCKS@ * num_GAM_GAPZ)

#SARB
  PS0_SARB        =       D(SUM('@SARB@Idle'))/(@CLOCKS@ * num_GAM_SARB)
  PS1_SARB	  =       D(SUM('@SARB@InputStalled'))/(@CLOCKS@ * num_GAM_SARB)
  PS2_SARB        =       D(SUM('@SARB@Active'))/(@CLOCKS@ * num_GAM_SARB)
